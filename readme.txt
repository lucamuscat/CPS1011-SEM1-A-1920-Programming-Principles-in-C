The report (writeup) can be found in the reports directory (report.pdf) together with the tex files used to create it.

task1
│   CMakeLists.txt
│   debug_build.bat
│   main.c
│
└───lib
        functions.c
        functions.h
        functions_str.c
        functions_str.h
        utils.c
        utils.h

(Kindly note that the build directory provided isn't listed, but is
provided, as it contains multiple files generated by CMake)

task1/CMakeLists.txt - contains the necessary CMake and make files.

task1/debug_build.bat - Kindly run the CMakeLists.txt file using this
batch file (or the commands used inside it) to reproduce everything
exactly as I did.

task1/main.c - Contains a test driver of task1.

task1/lib - This directory contains the implementation of task1 in an
organized fashion.

task1/lib/functions.c - Contains the implementation of task 1a.

task1/lib/functions.h - Contains the API of task 1a.

task1/lib/functions_str.c - Contains the implementation of task 1b
(string version of task 1a).

task1/lib/functions_str.h - Contains the API of task 1b.

task1/lib/utils.c - Helper functions related to task 1a and task 1b
which were seperated from the actual code API. Kindly note that the
menu function asked for in task 1c is found over here.

task1/lib/utils.h - API for utils.c

task2
│   CMakeLists.txt
│   debug_build.bat
│   main.c
│   main_task2b.c
│
└───lib
    ├───task2a
    │       task2a_functions.c
    │       task2a_functions.h
    │
    └───task2b
            rlp.c
            rlp.h
            task2b_functions.c
            task2b_functions.h
            task2b_structs.h
            task2b_utils.c
            task2b_utils.h

(Kindly note that the build directory provided isn't listed, but is
provided, as it contains multiple files generated by CMake)

task2/CMakeLists.txt - CMakeLists.txt file for task2.

task2/debug_build.bat - Kindly build the task using this batch file
(or the commands inside of it if you aren't on windows). This will
help with accurate reproducability.

task2/main.c - Test driver for task 2a.

task2/main_task2b.c - Test driver for task 2b (and also the answer for
task 2c).

task2/lib - This contains all of the code unrelated to the test driver

task2/lib/task2a - One may find my implementation of task 2a here.

task2/lib/task2a/task2a_functions.c - Implementation of task 2a.

task2/lib/task2a/task2a_functions.h - Header for task 2a.

task2/lib/task2b - Contains the solution to task 2b.

task2/lib/task2b/rlp.c - RLP implementation.

task2/lib/task2b/rlp.c - Header for RLP implementation.

task2/lib/task2b/task2b_functions.c - Implmentation of task 2b (and
the ADT).

task2/lib/task2b/task2b_functions.h - Header of task 2b (This is also
the API for the ADT).

task2/lib/task2b/task2b_structs.h - A header file containing the
definitions of the needed structures can be found over here. This was
done to avoid circular dependencies.

task2/lib/task2b/task2b_utils.h - API for helper functions (Not
accessible through the ADT).

task2/lib/task2b/task2b_utils.c - Implementation of helper functions.
